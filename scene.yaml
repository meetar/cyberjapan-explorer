scene:
    background:
        color: [.4, .4, .4]

cameras:
    camera1:
        type: perspective
        vanishing_point: [-.25, -.75]
    camera2:
        type: isometric
        axis: [.0, 1.]
        active: true

lights:
    light1:
        type: directional
        diffuse: 1
        ambient: .35

sources:
    osm:
        type: TopoJSON
        url:  //vector.mapzen.com/osm/all/{z}/{x}/{y}.topojson?api_key=vector-tiles-HqUVidw
        # type: GeoJSON
        # url:  //tilestache-dev2-us-east-ext-1189213459.us-east-1.elb.amazonaws.com/osm/all/{z}/{x}/{y}.json?api_key=vector-tiles-HqUVidw
    rdcl:
        type: GeoJSON
        url: '//cyberjapandata.gsi.go.jp/xyz/experimental_rdcl/{z}/{x}/{y}.geojson'
        max_zoom: 16
    railcl:
        type: GeoJSON
        url: '//cyberjapandata.gsi.go.jp/xyz/experimental_railcl/{z}/{x}/{y}.geojson'
        max_zoom: 16
    rvrcl:
        type: GeoJSON
        url: '//cyberjapandata.gsi.go.jp/xyz/experimental_rvrcl/{z}/{x}/{y}.geojson'
        max_zoom: 16
    anno:
        type: GeoJSON
        url: '//cyberjapandata.gsi.go.jp/xyz/experimental_anno/{z}/{x}/{y}.geojson'
        max_zoom: 15
    fgd:
        type: GeoJSON
        url: '//cyberjapandata.gsi.go.jp/xyz/experimental_fgd/{z}/{x}/{y}.geojson'
        max_zoom: 18
    dem5a:
        type: GeoJSON
        url: '//cyberjapandata.gsi.go.jp/xyz/experimental_dem5a/{z}/{x}/{y}.geojson'
        max_zoom: 16
    dem10b:
        type: GeoJSON
        url: '//cyberjapandata.gsi.go.jp/xyz/experimental_dem10b/{z}/{x}/{y}.geojson'
        max_zoom: 16
    cp:
        type: GeoJSON
        url: '//cyberjapandata.gsi.go.jp/xyz/cp/{z}/{x}/{y}.geojson'
        max_zoom: 16
    pp:
        type: GeoJSON
        url: '//cyberjapandata.gsi.go.jp/xyz/pp/{z}/{x}/{y}.geojson'
        max_zoom: 16
    zk25000:
        type: GeoJSON
        url: '//cyberjapandata.gsi.go.jp/xyz/zk25000/{z}/{x}/{y}.geojson'
        max_zoom: 8

layers:
    earth:
        data: { source: osm }
        properties: 
            key_text: ""
            value_text: ""
        draw:
            polygons:
                order: 0
                color: [.5, .5, .5]
            lines:
                color: LightSkyBlue
                width: 4px
    boundaries:
        data: {source: osm}
        properties: 
            key_text: ""
            value_text: ""
        draw:
            lines:
                order: 0
                color: LightSkyBlue
                width: 2px
    water:
        data: {source: osm}
        properties: 
            key_text: ""
            value_text: ""
        draw:
            polygons:
                order: 2
                color: lightblue
        riverbanks:
            filter: {not: {kind: [ocean, river] } }
            draw:
                lines:
                    order: 3
                    color: LightSkyBlue
                    width: 2px

    rdcl:
        data: {source: rdcl}
        properties: 
            key_text: ""
            value_text: ""
        # visible: false
        draw:
            lines:
                interactive: true
                order: 4
                color: orange
                width: 2px
        path:
            filter: {type: 庭園路}
            draw:
                lines:
                    color: orange
                    width: 1.5px
        red:
            filter: |
                function () {
                    return feature[properties.key_text] && String(feature[properties.key_text]).toLowerCase().indexOf(properties.value_text.toLowerCase()) > -1;
                }
            draw:
                lines:
                    width: 4px
                    color: red
    railcl:
        data: {source: railcl}
        properties: 
            key_text: ""
            value_text: ""
        # visible: false
        draw:
            lines:
                interactive: true
                order: 5
                color: purple
                width: 6px
        red:
            filter: |
                function () {
                    return feature[properties.key_text] && String(feature[properties.key_text]).toLowerCase().indexOf(properties.value_text.toLowerCase()) > -1;
                }
            draw:
                lines:
                    order: 100
                    color: red
    rvrcl:
        data: {source: rvrcl}
        properties: 
            key_text: ""
            value_text: ""
        # visible: false
        draw:
            lines:
                interactive: true
                order: 6
                color: green
                width: 2px
        red:
            filter: |
                function () {
                    return feature[properties.key_text] && String(feature[properties.key_text]).toLowerCase().indexOf(properties.value_text.toLowerCase()) > -1;
                }
            draw:
                lines:
                    order: 100
                    color: red
    anno:
        data: {source: anno}
        properties: 
            key_text: ""
            value_text: ""
        # visible: false
        draw:
            points:
                interactive: true
                order: 7
                color: green
                size: 16px
            text:
                interactive: true
                order: 10
                text_source: knj
                offset: [0, -13]
                font:
                    size: 12pt
                    fill: black
        red:
            filter: |
                function () {
                    return feature[properties.key_text] && String(feature[properties.key_text]).toLowerCase().indexOf(properties.value_text.toLowerCase()) > -1;
                }
            draw:
                points:
                    color: red

    fgd:
        data: {source: fgd}
        visible: true
        properties: 
            key_text: ""
            value_text: ""
        draw:
            lines:
                interactive: true
                order: 10
                color: pink
                width: 3px
        red:
            filter: |
                function () {
                    return feature[properties.key_text] && String(feature[properties.key_text]).toLowerCase().indexOf(properties.value_text.toLowerCase()) > -1;
                }
            draw:
                lines:
                    order: 100
                    color: red
                    width: 4px
