scene:
    background:
        color: [.4, .4, .4]

cameras:
    camera1:
        type: perspective
        vanishing_point: [-.25, -.75]
    camera2:
        type: isometric
        axis: [.0, 1.]
        active: true

lights:
    light1:
        type: directional
        diffuse: 1
        ambient: .35

sources:
    osm:
        type: TopoJSON
        url:  //vector.mapzen.com/osm/all/{z}/{x}/{y}.topojson?api_key=vector-tiles-HqUVidw
        # type: GeoJSON
        # url:  //tilestache-dev2-us-east-ext-1189213459.us-east-1.elb.amazonaws.com/osm/all/{z}/{x}/{y}.json?api_key=vector-tiles-HqUVidw
    fgd:
        type: GeoJSON
        url: //cyberjapandata.gsi.go.jp/xyz/experimental_fgd/{z}/{x}/{y}.geojson
        # max_zoom: 18
layers:
    # earth:
    #     data: { source: osm }
    #     properties: 
    #         key_text: ""
    #         value_text: ""
    #     draw:
    #         polygons:
    #             interactive: true
    #             order: 0
    #             color: [.5, .5, .5]
    #     red:
    #         filter: |
    #             function () {
    #                 return feature[properties.key_text] && feature[properties.key_text].toLowerCase().indexOf(properties.value_text.toLowerCase()) > -1;
    #             }
    #         draw:
    #             lines:
    #                 order: 100
    #                 color: red
    #                 width: 3px
    #             text:
    #                 order: 100
    #                 text_source: name
    #                 font:
    #                     size: 8pt
    #                     family: Lucida Grande
    #                     fill: white
    #                     # stroke: { color: black, width: 4 }

    # landuse:
    #     data: { source: osm }
    #     properties: 
    #         key_text: ""
    #         value_text: ""
    #     draw:
    #         polygons:
    #             interactive: true
    #             order: 1
    #             color: [.6, .6, .6]
    #     red:
    #         filter: |
    #             function () {
    #                 return feature[properties.key_text] && feature[properties.key_text].toLowerCase().indexOf(properties.value_text.toLowerCase()) > -1;
    #             }
    #         draw:
    #             lines:
    #                 order: 100
    #                 color: red
    #                 width: 3px
    #             text:
    #                 order: 100
    #                 text_source: name
    #                 font:
    #                     size: 8pt
    #                     family: Lucida Grande
    #                     fill: white
    #                     stroke: { color: black, width: 4 }

    # water:
    #     data: { source: osm }
    #     properties: 
    #         key_text: ""
    #         value_text: ""
    #     draw:
    #         polygons:
    #             interactive: true
    #             order: 2
    #             color: [.4, .4, .4]
    #         lines:
    #             order: 3
    #             color: [.5, .5, .5]
    #             width: 1px
    #     red:
    #         filter: |
    #             function () {
    #                 return feature[properties.key_text] && feature[properties.key_text].toLowerCase().indexOf(properties.value_text.toLowerCase()) > -1;
    #             }
    #         draw:
    #             lines:
    #                 order: 100
    #                 color: red
    #                 width: 3px
    #             text:
    #                 order: 100
    #                 text_source: name
    #                 font:
    #                     size: 8pt
    #                     family: Lucida Grande
    #                     fill: white
    #                     # stroke: { color: black, width: 4 }

    # routes:
    #     data: { source: osm }
    #     filter:
    #         route: subway
    #         operator: Metropolitan Transportation Authority
    #     properties: 
    #         key_text: ""
    #         value_text: ""
    #     draw:
    #         lines:
    #             interactive: true
    #             order: 2
    #             color: '#bbb'
    #             width: 4px
    #         text:
    #             order: 2
    #             text_source: route_name
    #             font:
    #                 size: 10px
    #                 family: Helvetica
    #                 fill: white
    #     blue:
    #         filter: { ref: [A, C, E] }
    #         draw:
    #             lines:
    #                 color: blue
    #     orange:
    #         filter: { ref: [B, D, F, M] }
    #         draw:
    #             lines:
    #                 color: orange
    #     yellow:
    #         filter: { ref: [N, R, Q, J] }
    #         draw:
    #             lines:
    #                 color: yellow
    #     red:
    #         filter: { ref: ["1", "2", "3"] }
    #         draw:
    #             lines:
    #                 color: red
    #     green:
    #         filter: { ref: ["4" , "5", "6"] }
    #         draw:
    #             lines:
    #                 color: green
    #     match:
    #         filter: |
    #             function () {
    #                 return feature[properties.key_text] && feature[properties.key_text].toLowerCase().indexOf(properties.value_text.toLowerCase()) > -1;
    #             }
    #         draw:
    #             lines:
    #                 interactive: true
    #                 order: 100
    #                 color: red
    #                 width: 4px
    #             text:
    #                 order: 100
    #                 text_source: name
    #                 font:
    #                     size: 8pt
    #                     family: Lucida Grande
    #                     fill: white

    # roads:
    #     data: { source: osm }
    #     properties: 
    #         key_text: ""
    #         value_text: ""
    #     draw:
    #         lines:
    #             interactive: true
    #             order: 2
    #             color: '#bbb'
    #             width: 1px
    #     red:
    #         filter: |
    #             function () {
    #                 return feature[properties.key_text] && feature[properties.key_text].toLowerCase().indexOf(properties.value_text.toLowerCase()) > -1;
    #             }
    #         draw:
    #             lines:
    #                 order: 100
    #                 color: red
    #                 width: 2px
    #             text:
    #                 order: 100
    #                 text_source: name
    #                 font:
    #                     size: 8pt
    #                     family: Lucida Grande
    #                     fill: white
    #                     # stroke: { color: black, width: 4 }

    # transit:
    #     data: { source: osm }
    #     properties:
    #         key_text: ""
    #         value_text: ""
    #     draw:
    #         lines:
    #             interactive: true
    #             order: 2
    #             color: '#bbb'
    #             width: 2px
    #     red:
    #         filter: |
    #             function () {
    #                 return feature[properties.key_text] && feature[properties.key_text].toLowerCase().indexOf(properties.value_text.toLowerCase()) > -1;
    #             }
    #         draw:
    #             lines:
    #                 order: 100
    #                 color: red
    #                 width: 2px
    #             text:
    #                 order: 100
    #                 text_source: name
    #                 font:
    #                     size: 8pt
    #                     family: Lucida Grande
    #                     fill: white
    #                     # stroke: { color: black, width: 4 }

    # buildings:
    #     data: { source: osm }
    #     properties: 
    #         key_text: ""
    #         value_text: ""
    #     draw:
    #         polygons:
    #             interactive: true
    #             order: 4
    #             color: '#888'
    #     red:
    #         filter: |
    #             function () {
    #                 return feature[properties.key_text] && feature[properties.key_text].toLowerCase().indexOf(properties.value_text.toLowerCase()) > -1;
    #             }
    #         draw:
    #             lines:
    #                 order: 100
    #                 color: red
    #                 width: 3px
    #             text:
    #                 order: 100
    #                 text_source: name
    #                 font:
    #                     size: 8pt
    #                     family: Lucida Grande
    #                     fill: white
    #                     # stroke: { color: black, width: 4 }

    # places-dot-outlines:
    #     data: { source: osm, layer: places }
    #     properties: 
    #         key_text: ""
    #         value_text: ""
    #     draw:
    #         points:
    #             order: 10
    #             color: black
    #             size: 14px

    # places:
    #     data: { source: osm }
    #     properties: 
    #         key_text: ""
    #         value_text: ""
    #     draw:
    #         points:
    #             interactive: true
    #             order: 11
    #             color: '#888'
    #             size: 10px
    #         text:
    #             order: 12
    #             text_source: name
    #             font:
    #                 size: 8pt
    #                 family: Helvetica
    #                 fill: '#ccc'
    #     red:
    #         filter: |
    #             function () {
    #                 return feature[properties.key_text] && feature[properties.key_text].toLowerCase().indexOf(properties.value_text.toLowerCase()) > -1;
    #             }
    #         draw:
    #             points:
    #                 interactive: true
    #                 order: 100
    #                 color: '#c88'
    #                 size: 10px
    #             text:
    #                 order: 101
    #                 text_source: name
    #                 font:
    #                     fill: red

    # poi_labels-dot-outlines:
    #     data: { source: osm, layer: pois }
    #     filter: { $zoom: { min: 15 } }
    #     properties: 
    #         key_text: ""
    #         value_text: ""
    #     draw:
    #         points:
    #             order: 10
    #             color: black
    #             size: 12px


    # poi_labels:
    #     data: { source: osm, layer: pois }
    #     filter: { $zoom: { min: 15 } }
    #     properties: 
    #         key_text: ""
    #         value_text: ""
    #     draw:
    #         points:
    #             interactive: true
    #             order: 11
    #             color: '#888'
    #             size: 8px
    #         text:
    #             order: 12
    #             text_source: name
    #             font:
    #                 size: 8pt
    #                 family: Helvetica
    #                 fill: '#ccc'
    #     red:
    #         filter: |
    #             function () {
    #                 return feature[properties.key_text] && feature[properties.key_text].toLowerCase().indexOf(properties.value_text.toLowerCase()) > -1;
    #             }
    #         draw:
    #             points:
    #                 interactive: true
    #                 order: 100
    #                 color: '#c88'
    #                 size: 10px
    #             text:
    #                 order: 100
    #                 text_source: name
    #                 font:
    #                     fill: red


    # landuse_labels-dot-outlines:
    #     data: { source: osm, layer: landuse_labels }
    #     filter: 
    #         any:
    #             # show labels for smaller landuse areas at higher zooms
    #             - { $zoom: { min: 9 },  area: { min: 100000000 } }
    #             - { $zoom: { min: 10 }, area: { min: 100000000 } }
    #             - { $zoom: { min: 11 }, area: { min: 25000000 } }
    #             - { $zoom: { min: 12 }, area: { min: 5000000 } }
    #             - { $zoom: { min: 13 }, area: { min: 2000000 } }
    #             - { $zoom: { min: 14 }, area: { min: 100000 } }
    #             - { $zoom: { min: 15 }, area: { min: 50000 } }
    #             - { $zoom: { min: 15 }, area: { min: 10000 } }
    #             - { $zoom: { min: 18 } }
    #     properties: 
    #         key_text: ""
    #         value_text: ""
    #     draw:
    #         points:
    #             order: 10
    #             color: black
    #             size: 12px

    # landuse_labels:
    #     data: { source: osm }
    #     filter: 
    #         any:
    #             # show labels for smaller landuse areas at higher zooms
    #             - { $zoom: { min: 9 },  area: { min: 100000000 } }
    #             - { $zoom: { min: 10 }, area: { min: 100000000 } }
    #             - { $zoom: { min: 11 }, area: { min: 25000000 } }
    #             - { $zoom: { min: 12 }, area: { min: 5000000 } }
    #             - { $zoom: { min: 13 }, area: { min: 2000000 } }
    #             - { $zoom: { min: 14 }, area: { min: 100000 } }
    #             - { $zoom: { min: 15 }, area: { min: 50000 } }
    #             - { $zoom: { min: 15 }, area: { min: 10000 } }
    #             - { $zoom: { min: 18 } }
    #     properties: 
    #         key_text: ""
    #         value_text: ""
    #     draw:
    #         points:
    #             interactive: true
    #             order: 11
    #             color: '#888'
    #             size: 8px
    #         text:
    #             order: 12
    #             text_source: name
    #             font:
    #                 size: 8pt
    #                 family: Helvetica
    #                 fill: '#ccc'
    #     red:
    #         filter: |
    #             function () {
    #                 return feature[properties.key_text] && feature[properties.key_text].toLowerCase().indexOf(properties.value_text.toLowerCase()) > -1;
    #             }
    #         draw:
    #             points:
    #                 interactive: true
    #                 order: 100
    #                 color: '#c88'
    #                 size: 10px
    #             text:
    #                 order: 100
    #                 text_source: name
    #                 font:
    #                     fill: red
    fgd:
        data: {source: fgd}
        visible: true
        properties: 
            key_text: ""
            value_text: ""
        draw:
            lines:
                interactive: true
                order: 10
                color: orange
                width: 5px
        red:
            filter: |
                function () {
                    return feature[properties.key_text] && feature[properties.key_text].toLowerCase().indexOf(properties.value_text.toLowerCase()) > -1;
                }
            draw:
                lines:
                    color: red
